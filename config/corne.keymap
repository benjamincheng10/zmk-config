/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_capslock {
            timeout-ms = <50>;

            // keys = <ZMK_KEY_LCTRL ZMK_KEY_LALT ZMK_KEY_C>;
            // action = <ZMK_MOD_LCTL ZMK_MOD_LALT ZMK_MOD_C>;
            // key-positions = <1 2>; // Q and W cuz index 0 is empty

            key-positions = <2 9>; // W and O
            bindings = <&kp CAPSLOCK>;
        };

        config_layer_combo {
            timeout-ms = <50>;
            key-positions = <36 37 38>; // S and J
            bindings = <&mo 3>; // momentary activation of layer
            //bindings = <&tog 3>; // layer "id", permanent activation
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |     |  Q  |  W  |  E  |  R  |  T  |        |  Y  |  U  |  I  |  O  |  P  |      |
            // |     |  A  |  S  |  D  |  F  |  G  |        |  H  |  J  |  K  |  L  |  ;: |      |
            // |     |  Z  |  X  |  C  |  V  |  B  |        |  N  |  M  |  ,< |  .> |  /? |      |
            //       | LCTRL/TAB | GUI | LWR/SPC |          | RSE/ENT | RSHFT/BSPC | RALT/ESC |
            //                  (command)                                            (option)

            bindings = <
&trans  &kp B  &kp W  &kp E          &kp R     &kp T          &kp Y      &kp U           &kp I         &kp O    &kp P     &trans
&trans  &kp A  &kp S  &kp D          &kp F     &kp G          &kp H      &kp J           &kp K         &kp L    &kp SEMI  &trans
&trans  &kp Z  &kp X  &kp C          &lt 3 V   &kp B          &kp N      &kp M           &kp COMMA     &kp DOT  &kp FSLH  &trans
                      &mt LCTRL TAB  &kp LGUI  &lt 2 SPACE    &lt 1 RET  &mt RSHFT BSPC  &mt RALT ESC
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |     |  1  |  2  |  3  |  4  |  5  |        |  6  |  7  |  8  |  9  |  0  |      |
            // |     |  !  |  @  |  #  |  $  |  %  |        |  ^  |  &  |  *  |  (  |  )  |      |
            // |     |     |     |     |     |     |        |     |     |     |     | ' " |      |
            //       | LCTRL/TAB | GUI | LWR/SPC |                 | RSE/ENT | RSHFT/BSPC | RALT/ESC |
            //                  (command)                                            (option)

            bindings = <
&trans  &kp N1    &kp N2  &kp N3         &kp N4    &kp N5       &kp N6     &kp N7          &kp N8        &kp N9     &kp N0    &trans
&trans  &kp EXCL  &kp AT  &kp HASH       &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS        &kp ASTRK     &kp LPAR   &kp RPAR  &trans
&trans  &trans    &trans  &trans         &trans    &trans       &kp LEFT   &kp DOWN        &kp UP        &kp RIGHT  &kp SQT   &trans
                          &mt LCTRL TAB  &kp LGUI  &trans       &trans     &mt RSHFT BSPC  &mt RALT ESC
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |     |     |     |     |     |     |        |     |     |     |  -_ |  =+ |      |
            // |     |  `  |     |     |     |     |        |     |     | [{  |  }] |  \| |      |
            // |     |  ~  |     |     |     |     |        |  _  |  +  |     | ' " |     |      |
            //       | LCTRL/TAB | GUI | LWR/SPC |          | RSE/ENT | RSHFT/BSPC | RALT/ESC |
            //                  (command)                                            (option)

            bindings = <
&trans  &trans     &trans  &trans         &trans    &trans    &trans     &trans          &trans        &kp MINUS  &kp EQUAL  &trans
&trans  &kp GRAVE  &trans  &trans         &trans    &trans    &trans     &trans          &kp LBKT      &kp RBKT   &kp BSLH   &trans
&trans  &kp TILDE  &trans  &trans         &trans    &trans    &kp UNDER  &kp PLUS        &trans        &kp SQT    &trans     &trans
                           &mt LCTRL TAB  &kp LGUI  &trans    &trans     &mt RSHFT BSPC  &mt RALT ESC
            >;
        };

        config_layer {
            // -------------------------------------------------------------------------------------------------------------------------
            // |     |          |          |          |          |          |                  |     |     |     |     |     |      |
            // |     | BT_SEL 0 | BT_SEL 1 | BT_SEL 2 | BT_SEL 3 | BT_SEL 4 |                  |     |     |     |     |     |      |
            // |     |  BT_CLR  |          |          |          |          |                  |     |     |     |     |     |      |
            //                             |          |          |          |                  |     |     |     |

            bindings = <
&trans  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp LC(UP)    &kp C_AC_SEARCH  &kp C_VOICE_COMMAND    &kp F6  &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT         &kp C_MUTE       &trans
&trans  &bt BT_SEL 0          &bt BT_SEL 1          &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4           &trans  &trans          &trans            &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans
&trans  &bt BT_CLR            &trans                &trans        &trans           &trans                 &trans  &trans          &trans            &trans             &trans           &trans
                                                    &trans        &trans           &trans                 &trans  &trans          &trans
            >;
        };
    };
};
